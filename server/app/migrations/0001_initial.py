# Generated by Django 4.2.9 on 2024-01-27 09:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Award",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="Award Name")),
                (
                    "description",
                    models.CharField(max_length=250, verbose_name="Award Description"),
                ),
                ("slug", models.SlugField(editable=False, max_length=150, unique=True)),
            ],
            options={
                "verbose_name": "Award",
                "verbose_name_plural": "Awards",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=150, unique=True, verbose_name="Category Name"
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        max_length=250, verbose_name="Category Description"
                    ),
                ),
                ("slug", models.SlugField(editable=False, max_length=150, unique=True)),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="Nominee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "full_name",
                    models.CharField(max_length=150, verbose_name="Full Name"),
                ),
                ("email", models.EmailField(max_length=254, verbose_name="Email")),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Phone"
                    ),
                ),
                (
                    "affiliation_company",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Affiliation or Company",
                    ),
                ),
                (
                    "position_job_title",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Position/Job Title",
                    ),
                ),
                (
                    "linkedin_profile",
                    models.URLField(
                        blank=True, null=True, verbose_name="LinkedIn Profile"
                    ),
                ),
                (
                    "brief_description",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Brief Description of the Nomination",
                    ),
                ),
                (
                    "achievements_contributions",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Specific Achievements or Contributions",
                    ),
                ),
                (
                    "educational_background",
                    models.TextField(
                        blank=True, null=True, verbose_name="Educational Background"
                    ),
                ),
                (
                    "professional_certifications",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Professional Certifications",
                    ),
                ),
                (
                    "work_experience",
                    models.TextField(
                        blank=True, null=True, verbose_name="Relevant Work Experience"
                    ),
                ),
                (
                    "notable_projects_products",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Notable Projects or Products",
                    ),
                ),
                (
                    "impact_description",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Description of the impact of the nominee's work",
                    ),
                ),
                (
                    "innovations_introduced",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Innovations introduced by the nominee",
                    ),
                ),
                (
                    "patents_publications_contributions",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Any patents, publications, or open-source contributions",
                    ),
                ),
                (
                    "recommendation_letters",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Letters of Recommendation or Endorsement (if applicable)",
                    ),
                ),
                (
                    "testimonials_quotes",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Testimonials or Quotes from colleagues, clients, or industry experts",
                    ),
                ),
                (
                    "project_links",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Links to relevant projects, products, or code repositories",
                    ),
                ),
                (
                    "screenshots_demos",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Screenshots, demos, or other visual representations of their work",
                    ),
                ),
                (
                    "participation_in_events",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Participation in conferences, workshops, or seminars",
                    ),
                ),
                (
                    "ongoing_professional_development",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Any ongoing commitment to professional development",
                    ),
                ),
                (
                    "tech_community_involvement",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Involvement in tech communities or organizations",
                    ),
                ),
                (
                    "open_source_contributions",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Contributions to open-source projects",
                    ),
                ),
                (
                    "volunteering_mentorship",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Volunteering or mentorship activities",
                    ),
                ),
                (
                    "additional_information",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Any other information that supports the nominee's candidacy",
                    ),
                ),
                (
                    "awards_recognitions_received",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Relevant awards or recognitions received",
                    ),
                ),
                ("slug", models.SlugField(editable=False, max_length=150, unique=True)),
                (
                    "award",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.award"
                    ),
                ),
            ],
            options={
                "verbose_name": "Nominee",
                "verbose_name_plural": "Nominees",
            },
        ),
        migrations.AddField(
            model_name="award",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="app.category"
            ),
        ),
    ]
